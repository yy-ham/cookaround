<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.cookaround.domain.recipe.mapper.RecipeMapper">

    <select id="showRecipeList" resultType="com.project.cookaround.domain.recipe.dto.RecipeDto">
        SELECT * FROM recipe
    </select>

    <!-- 레시피 목록 페이지 -->
    <select id="showRecipeListJson" resultType="com.project.cookaround.domain.recipe.dto.RecipeDto">
        SELECT r.id, m.login_id AS loginId, r.category, r.title, r.view_count AS viewCount, r.created_at AS createdAt,
               m.profile AS memberProfile,
               COALESCE(rv.review_count, 0) AS reviewCount,
               round(COALESCE(rv2.avg_rating, 0),1) AS avgRating
        FROM recipe r
        LEFT JOIN member m ON r.member_id = m.id
        LEFT JOIN (
            SELECT recipe_id, COUNT(*) as review_count
            FROM review
            GROUP BY recipe_id
        ) rv ON r.id = rv.recipe_id
        LEFT JOIN (
            SELECT recipe_id, avg(rating) as avg_rating
            FROM review
            GROUP BY recipe_id
        ) rv2 ON r.id = rv2.recipe_id
        WHERE 1 = 1
        <if test="category != null and category != 'ALL'">
            AND r.category = #{category}
        </if>
        <choose>
            <when test="sort == 'newest'">
                ORDER BY r.created_at DESC
            </when>
            <when test="sort == 'views'">
                ORDER BY viewCount DESC
            </when>
            <when test="sort == 'reviews'">
                ORDER BY reviewCount DESC, r.id DESC
            </when>
            <otherwise>
                ORDER BY created_at DESC
            </otherwise>
        </choose>
    </select>

    <!-- 레시피 상세 페이지 -->
    <select id="showRecipeDetail" resultType="com.project.cookaround.domain.recipe.dto.RecipeDto">
        SELECT *
        FROM recipe
        WHERE id = #{id}
    </select>

</mapper>